--FECHA DE PRESTAMO, SOLICITUD Y DEVOLUCION DIFERENTE DE NULL
-- AGREGAR CONECCION ENTRE COLECCIONES Y AREAS
--CREACION DE BASE DE DATOS
--SELECT * FROM USER_
USE master;
GO
DROP DATABASE BINAES
GO
CREATE DATABASE BINAES;
GO
USE BINAES;
GO

--CREACION DE ESTRUCTURA
CREATE TABLE CELEBRATION(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    title VARCHAR(50) NOT NULL,
    picture VARCHAR,
    attendance INT,
    beginning_hour DATETIME,
    finishing_hour DATETIME,
    beginning_date DATETIME,
    finishing_date DATETIME,
);

DBCC CHECKIDENT(USER_, reeseed, 2);

GO

CREATE TABLE GOAL(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    goal_name VARCHAR(50) NOT NULL,
    --FK
    id_celebration INT NOT NULL
);
GO

CREATE TABLE ACTIVITY(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    beginning_hour DATETIME,
    finishing_hour DATETIME,
    beginning_date DATETIME,
    finishing_date DATETIME,
    --FK
    id_area INT NOT NULL,
    id_celebration INT NOT NULL,
    id_attendance INT NOT NULL
);
GO

CREATE TABLE AREA(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    area_name VARCHAR(50) NOT NULL,
    area_description VARCHAR(100),
    schedule DATETIME NOT NULL,
    --FK
    id_manager INT NOT NULL
);
GO

CREATE TABLE MANAGER(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    manager_name VARCHAR(50) NOT NULL
);
GO

CREATE TABLE USER_(
    id INT 
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    username VARCHAR(50) NOT NULL,
    user_address VARCHAR(100) NULL
        DEFAULT 'No available addres',
    phone CHAR(13) 
        NOT NULL 
        UNIQUE,
        --CHECK (phone LIKE '+503 [2|6|7][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
    picture NVARCHAR(250)
        DEFAULT 'No picture available',
    email VARCHAR(50) NOT NULL,
    password VARCHAR(250) NOT NULL,
    --FK
    id_occupancy INT NOT NULL,
    id_institution INT NOT NULL,
    id_role INT NOT NULL
);
GO

CREATE TABLE OCCUPANCY(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    occupancy_name VARCHAR(50)
);
GO

CREATE TABLE ROLE_(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    role_type VARCHAR(50)
);
GO

CREATE TABLE INSTITUTION(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    institution_name VARCHAR(100)
);
GO

CREATE TABLE ATTENDANCE(
    id INT 
        PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    entrance_date DATETIME,
    exit_date DATETIME,
    entarance_hour DATETIME,
    exit_hour DATETIME,
    --FK
    id_user INT NOT NULL,
);
GO

CREATE TABLE LOAN_BOOKING(
    id INT 
        PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    booking_date DATETIME,
    booking_hour DATETIME,
    return_date DATETIME,
    return_hour DATETIME,
    loan_date DATETIME,
    loan_hour DATETIME,
    --FK
    id_user INT NOT NULL,
    id_copy INT NOT NULL,
);
GO

CREATE TABLE COPY_(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    --ATRIBUTOS
    copy_name VARCHAR(50) NOT NULL,
    picture NVARCHAR(50)
        DEFAULT 'No picture available',
    release_date DATETIME NOT NULL,
    --FK
    id_collection INT NOT NULL,
    id_language INT NOT NULL,
    id_format INT NOT NULL
);
GO

CREATE TABLE LANGUAGE_(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    language_name VARCHAR(50) NOT NULL
);
GO

CREATE TABLE FORMAT_(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    format_name VARCHAR(50) NOT NULL
);
GO

CREATE TABLE AUTHOR(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    author_name VARCHAR(50) NOT NULL,
    --FK
    id_copy INT NOT NULL
);
GO

CREATE TABLE WORDS_LIST(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    word VARCHAR(50) NOT NULL,
    --FK
    id_copy INT NOT NULL
);
GO

CREATE TABLE LABEL_(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    label_name VARCHAR(50),
    --FK
    id_copy INT NOT NULL
);
GO

CREATE TABLE COLLECTION_(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    collection_name VARCHAR(50) NOT NULL,
    --FK
    id_type INT NOT NULL,
    id_genre INT NOT NULL
);
GO

CREATE TABLE TYPE_(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    type_name_ VARCHAR(50) NOT NULL
);
GO

CREATE TABLE GENRE(
    id INT
        IDENTITY(1,1) PRIMARY KEY NOT NULL,
    genre_name VARCHAR(50) NOT NULL
);
GO

-- CONECCTIONS
-- DATA BASE SELECTION
USE BINAES;
-- FOREIGN KEYS CREATION
--COLLECTION_ TABLE
ALTER TABLE COLLECTION_ ADD CONSTRAINT fk_collection_genre
	FOREIGN KEY(id_genre) REFERENCES GENRE(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO    
ALTER TABLE COLLECTION_ ADD CONSTRAINT fk_collection_type
	FOREIGN KEY(id_type) REFERENCES TYPE_(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
-- LABEL_ TABLE
ALTER TABLE LABEL_ ADD CONSTRAINT fk_copy_label
	FOREIGN KEY(id_copy) REFERENCES COPY_(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
-- WORDS_LIST TABLE
ALTER TABLE WORDS_LIST ADD CONSTRAINT fk_copy_list
	FOREIGN KEY(id_copy) REFERENCES COPY_(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
-- AUTHOR TABLE
ALTER TABLE AUTHOR ADD CONSTRAINT fk_copy_author
	FOREIGN KEY(id_copy) REFERENCES COPY_(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
-- COPY_ TABLE
ALTER TABLE COPY_ ADD CONSTRAINT fk_collection_copy
	FOREIGN KEY(id_collection) REFERENCES COLLECTION_(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE COPY_ ADD CONSTRAINT fk_copy_language
	FOREIGN KEY(id_language) REFERENCES LANGUAGE_(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE COPY_ ADD CONSTRAINT fk_copy_format
	FOREIGN KEY(id_format) REFERENCES FORMAT_(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
-- USER_ TABLE
ALTER TABLE USER_ ADD CONSTRAINT fk_user_intitution
	FOREIGN KEY(id_institution) REFERENCES INSTITUTION(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE USER_ ADD CONSTRAINT fk_user_occupancy
	FOREIGN KEY(id_occupancy) REFERENCES OCCUPANCY(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE USER_ ADD CONSTRAINT fk_user_role
	FOREIGN KEY(id_role) REFERENCES ROLE_(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
-- AREA TABLE
ALTER TABLE AREA ADD CONSTRAINT fk_area_manager
	FOREIGN KEY(id_manager) REFERENCES MANAGER(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
-- GOAL TABLE
ALTER TABLE GOAL ADD CONSTRAINT fk_celebration_goal
	FOREIGN KEY(id_celebration) REFERENCES CELEBRATION(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO

--TABLAS CRUZ
-- LOAN_BOOKING TABLE
ALTER TABLE LOAN_BOOKING ADD CONSTRAINT fk_user_lxb
    FOREIGN KEY(id_user) REFERENCES USER_(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE LOAN_BOOKING ADD CONSTRAINT fk_copy_lxb
    FOREIGN KEY(id_copy) REFERENCES COPY_(id)
	ON DELETE NO ACTION
    ON UPDATE NO ACTION;
GO
-- ACTIVITY TABLE
ALTER TABLE ACTIVITY ADD CONSTRAINT fk_activity_area
    FOREIGN KEY(id_area) REFERENCES AREA(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO
ALTER TABLE ACTIVITY ADD CONSTRAINT fk_celebration_activity
    FOREIGN KEY(id_celebration) REFERENCES CELEBRATION(id)
	ON DELETE NO ACTION
    ON UPDATE NO ACTION;
GO 
ALTER TABLE ACTIVITY ADD CONSTRAINT fk_activity_attendance
    FOREIGN KEY(id_attendance) REFERENCES ATTENDANCE(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO 
-- ATTENDANCE TABLE
ALTER TABLE ATTENDANCE ADD CONSTRAINT fk_attendance_user
    FOREIGN KEY(id_user) REFERENCES USER_(id)
	ON DELETE CASCADE
    ON UPDATE CASCADE;
GO